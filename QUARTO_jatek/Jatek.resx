<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AADd4OX/T5bA/wSI2P8HleT/DJfk/w+W5P8NluX/CpXo/wuX5v8Nl+X/DZfl/wyV5/8Nluf/DJfn/wyW
        5/8NleT/C5Tk/wqT4/8Kk+L/C5Tl/wyU5v8LkuT/CZLi/wqQ4v8KkOH/DJXn/wuU5v8KlOH/CpPh/wyP
        3P9Qqt7/4e/0/0mRwv8AmfX/K7f7/zqS2P8qiM7/KYvQ/yuK0P8uh83/KYbH/yiJy/8oisz/LYvQ/yuI
        y/8ohsP/LojN/yqP1/8okdj/Lpfg/zCY4/8tkNj/MJLR/yqf2f8rouL/LKTm/yuo6v8pjcv/L5HS/yua
        4v8clej/C6X+/wCe9/9Nt+z/BIrY/zG4+/88aJr/DTJ2/xQ9g/8QPIT/FDp//xk2c/8NK2L/DS1o/w8u
        cf8NLm//Bito/wUiU/8YK3D/CjaL/xBDlP8fVaL/JFei/x1KkP8SNGD/DWON/w51q/8Tf7X/HprL/xdL
        e/8eQX7/I2a7/xhTq/8OYLf/BJnv/x2t/f8Lk+b/NpTO/xIwdP8WOHr/GTNm/xs0cP8fSIr/H0uL/x1E
        g/8UO3n/Dzd2/xA2dv8MM27/DjJx/ww7iP8TRpj/H1yr/ylotf8oYa//HE+I/wojQv8UYpP/Hn61/y2K
        u/8tqNb/GGaf/xpPmf8facD/Hme+/xhTqf8Icsj/IrL//wyV5P8ph9P/CyRi/xIyX/8VP3D/EVmH/xY/
        cP8iP3T/Ik6M/x9CgP8UO3X/EDl2/xg9fP8RO4f/DjiF/xc8dv8aPnD/HUl//yljnP8cOmj/DSI9/xRU
        iP8YdKz/FX2y/w+WzP8ZeLr/I2Cv/yFjr/8na7X/ImO0/w1twP8lsfz/Cpbm/yyGzP8LJU3/FIe5/xWO
        yv8Rod3/FXmy/xIkUv8iS4j/HUuH/x9DhP8ZQ4r/GUeK/xE8hv8SM2z/DidU/w4nUf8ULlj/FzFd/xY3
        YP8WLlb/DFiI/xB+uv8Rgr7/D5bO/xaHwf8aRoj/Jkt//yBHef8gPnf/EWqv/yay//8Lmuf/Ln+9/xM6
        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
        jv8KJVb/EzFj/xQwYP8UL17/ETBk/xMtcP8PJ2n/GDqK/zRkuf8yY7j/GjiJ/xEtWP8MK1b/CylW/w0l
        WP8NKmX/CChZ/x5toP8wv+//FXeq/zGgx/8kbJr/CjEq/wZcf/8ltP//Cpfs/ySDpv8DPQX/EWQ3/yhr
        bf8lSXP/ECVe/wgnXf8EJln/CCtb/wotW/8RMWr/DSRb/x05df83Zbf/NGm0/0aC0f8eRpr/DSdc/xY1
        bf8XNGz/Dy5k/w0vZP8RMWb/CzFr/yiCuP8jdp//FWJo/w9nNf8MSwn/A1x8/ySz//8Jmer/JoOm/wg6
        Df8SazD/C2Ym/xZXNf8iUVL/HkNd/xc0Y/8QLGP/Dyth/xEsYf8RLl7/ID9+/ypOnv8gR5X/Gj6I/zVn
        sP8KKV7/Dy5o/xM0bv8SL2n/Fzh0/xNAcv8TQmH/DEVF/wlRLv8JXCn/D24w/w1HFf8BWnf/I7b//wmY
        6/8lhKb/BTkE/wxdJv8MXiz/C18p/whWG/8QXSj/E1s6/xhVR/8fS1P/G0NV/yFGZf8dO2T/JUh9/1R9
        uv8cNnP/GT93/xxIdP8XSWr/GU1m/xVMVf8PT0H/DVk6/wtfKf8MXR//DVgg/w1eMf8JXiv/CD0M/wJb
        eP8jtf//CZft/yWEpP8DPAr/B14p/wtdKv8JWRz/DFoX/wtfJv8IZDT/BFgV/wdZFP8IXCj/Dl4v/xFc
        M/8KVSf/BU0o/xRaP/8QVz7/Dl4+/w5kOP8NYy3/CmAo/whaEv8GVx3/DmQ2/wtdIf8MWxT/C1kf/whg
        Lf8HPRH/Alx9/yW2//8Jl+3/JYOj/wM/Dv8IXDT/CFUd/wlUIP8JWB7/B1cc/wlVJP8MXBb/Cl8d/wlW
        H/8GVB7/CFou/whfHv8LVxb/ClIS/wtiIP8KXyf/C1wj/wlgJv8JYCT/DWQa/wxZFv8LUST/CFYd/whY
        If8GVRz/CFYk/wg/GP8BW3z/I7T//wqX7f8kgqP/AjgG/wlcK/8IViL/DFkm/wlSIv8IUBX/ClQb/whd
        F/8IXCP/B1gh/wdWJf8LVyf/CVYe/whWFv8JTRf/C2Ai/whhJP8JYBz/C2Ic/wtaIf8JZxz/CmAb/wtV
        IP8KTRb/CFUi/wpZJP8MVyr/CTwQ/wJae/8ktP//CZfs/yWEpv8CNwD/Blgb/wtbIv8JWhv/CFMX/wlX
        Gv8JWSX/B1sd/wdVGv8JWyD/CFkj/wlTFf8KVRf/CFog/whYIf8JVx3/CmEk/wxlKv8PaCz/DWMy/wti
        IP8NXyL/CVsk/wpYG/8LVRP/DVsd/wtZJ/8FOAb/AVh7/yS1//8JmOr/J4Wl/wI8Bv8LXyL/C2Em/wpf
        Jf8HWSD/B1Yd/wpaI/8IVxv/CVke/wliIf8KYSX/CV4b/wpdI/8MWyP/Clog/whdJ/8MZSz/DGMv/w1r
        N/8NaC7/DFsj/wxbHP8LXiP/CFoe/wlZIv8JYCT/CmEq/wZAC/8CWHf/I7b//wiX6v8fgrT/BjIA/wVa
        JP8JWSP/B1wg/whlLP8KXiv/Blsn/wpgLP8KXSL/C1od/wpZI/8JWSL/CFYg/wldHf8LWyT/C2Iu/wpp
        Kv8LaS3/C2Ys/wxiM/8OZzT/CV8i/wxiLv8KZDH/Cl4h/wpbHv8KWCb/CDED/wZZg/8lt///BY3h/w6k
        9P8JQkH/CDMG/wU6Cv8FRAj/C0MM/wo9C/8FOQj/Bz0P/wlCBv8HOgL/BDkJ/wU9EP8GNwH/CDsD/wc7
        Bv8IQQf/C0gN/wlBC/8KQg7/CUkZ/wpFFv8OPw//DDoL/wlAD/8HRAT/BTwC/wcvAv8KMCb/A4jW/yi0
        /v9Hpt7/AJ3+/wiY6v8DY5P/Alx8/wVefP8FXn3/B118/wZbev8EXHv/BFx7/wRbef8FXHj/BFp3/wJY
        d/8DWHf/A1p1/wVbev8DXHz/AVt6/wRefv8EXX//BF1//wRbff8EWnz/BF17/wNce/8FWHj/BFuG/wmK
        1v8Dof//hdX3/+Dr9f9Tue//GrH3/yO0//8ltf//Irf//yO2//8mtv//Jbb//yO2//8jt///JLb//ya1
        //8ltf//I7b//yO2//8mt///JrT//yO2//8iuP//I7b//yS0//8ktf//JrX//ya1//8itv//I7f//yS0
        //8itv//Krb8/4/U+f/5/f7/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>